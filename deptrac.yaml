deptrac:
  paths:
    - src
  exclude_files:
    # Ignore test classes and Symfony fixtures from architecture checks
    - '#^tests/.*#'
    - '#src/.*/Infrastructure/Framework/Symfony/DataFixtures/.*#'
  layers:
    - name: Domain
      collectors:
        - type: classLike
          value: 'Marvin\\.+\\Domain\\.*'
        - type: classLike
          value: 'Symfony\\Component\\Uid\\.*'
        - type: classLike
          value: 'Symfony\\Component\\Messenger\\Attribute\\.*'
        - type: classLike
          value: 'Doctrine\\Common\\Collections\\(Collection|ArrayCollection)'

    - name: Application
      collectors:
        - type: classLike
          value: 'Marvin\\.+\\Application\\.*'
        - type: classLike
          value: 'Symfony\\Component\\Validator\\Constraints\\.*'

    - name: Infrastructure
      collectors:
        - type: classLike
          value: 'Marvin\\.+\\Infrastructure\\(?!Framework\\Symfony\\).*'
        - type: classLike
          value: 'Symfony\\(Contracts|Component|Bundle)\\(?!Messenger\\Attribute\\|Uid\\|Validator\\Constraints).*'
        - type: classLike
          value: 'Lexik\\.*'
        - type: classLike
          value: 'Symfonycasts\\.*'
        - type: classLike
          value: 'Doctrine\\(DBAL|ORM|Bundle|Persistence)\\.*'
        - type: classLike
          value: 'Psr\\.*'
        - type: classLike
          value: 'Marvin\\Security\\Presentation\\.*'

    - name: Presentation
      collectors:
          - type: classLike
            value: 'Marvin\\.+\\Presentation\\.*'
          - type: classLike
            value: 'ApiPlatform\\.*'
          - type: classLike
            value: 'Marvin\\Shared\\Infrastructure\\Framework\\Symfony\\MapperTransformer\\.*'

    - name: Framework
      collectors:
        - type: classLike
          value: 'Marvin\\.+\\Infrastructure\\Framework\\Symfony\\.*'

  ruleset:
    # Domain is the innermost layer and should not depend on other project layers
    Domain: []

    # Application coordinates use-cases and can depend only on Domain
    Application:
      - Domain

    # Presentation handles DTOs/Resources/Controllers and may depend on inner layers
    Presentation:
      - Application
      - Infrastructure

    # Infrastructure implements ports/adapters and can depend on Application and Domain
    Infrastructure:
      - Application
      - Domain

    # Framework (Symfony/API Platform/HTTP) is the outer layer and may depend on any inner layer
    Framework:
      - Infrastructure
      - Application
      - Domain

  #formatters:
  #  # Enable a concise console output
  #  console: ~
