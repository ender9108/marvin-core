services:
    php:
        build:
            dockerfile: docker/frankenphp/Dockerfile
        restart: unless-stopped
        container_name: '${APP_NAME}-php'
        environment:
            SERVER_NAME: '${SERVER_NAME:-localhost}, php:80'
            MERCURE_PUBLISHER_JWT_KEY: '${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}'
            MERCURE_SUBSCRIBER_JWT_KEY: '${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}'
            DATABASE_URL: 'postgres://${DB_USER:-test}:${DB_PASSWORD:-test}@database:5432/${DB_NAME:-test}'
            MERCURE_URL: '${CADDY_MERCURE_URL:-http://php/.well-known/mercure}'
            MERCURE_PUBLIC_URL: '${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}/.well-known/mercure}'
            MERCURE_JWT_SECRET: '${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}'
            SYMFONY_VERSION: '${SYMFONY_VERSION:-}'
            STABILITY: '${STABILITY:-stable}'
            UNIX_UID: '${UID:-1000}'
            UNIX_GID: '${GID:-1000}'
        volumes:
            - ./:/app
            - caddy_datas:/data:rw
        ports:
            - target: 80
              published: '${HTTP_PORT:-8000}'
              protocol: tcp
            - target: 443
              published: '${HTTPS_PORT:-4443}'
              protocol: tcp
            - target: 443
              published: '${HTTP3_PORT:-4443}'
              protocol: udp
        depends_on:
            database:
                condition: service_healthy

    worker:
        build:
            dockerfile: ./docker/worker/Dockerfile
            args:
                UNIX_UID: '${UID:-1000}'
                UNIX_GID: '${GID:-1000}'
        container_name: '${APP_NAME}-worker'
        ports:
            - '127.0.0.1:9001:9001'
        environment:
            UNIX_UID: '${UID:-1000}'
            UNIX_GID: '${GID:-1000}'
        volumes:
            - ./:/app
            - ./docker/worker/config/conf.d:/etc/supervisor/conf.d
        depends_on:
            database:
                condition: service_healthy
            php:
                condition: service_healthy
            mqtt_broker:
                condition: service_started

    database:
        image: timescale/timescaledb:2.22.1-pg${DB_VERSION-17}
        container_name: '${APP_NAME}-database'
        environment:
            POSTGRES_DB: ${DB_NAME:-marvin}
            POSTGRES_USER: ${DB_USER:-test}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-test}
        ports:
            - '127.0.0.1:5432:5432'
        volumes:
            - database_datas:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
            interval: 10s
            timeout: 5s
            retries: 10

    mqtt_broker:
        image: eclipse-mosquitto:2.0.22-openssl
        container_name: '${APP_NAME}-mqtt-broker'
        restart: unless-stopped
        volumes:
            - ./docker/mqtt_broker/config:/mosquitto/config
            - mqtt_broker_datas:/mosquitto/data
            - mqtt_broker_logs:/mosquitto/log
        ports:
            - "127.0.0.1:1883:1883"
            - "127.0.0.1:9002:9001"

    zigbee2mqtt:
        image: koenkk/zigbee2mqtt:2.6
        container_name: ${APP_NAME}-zigbee2mqtt
        restart: unless-stopped
        #user: "${UID:-1000}:${GID:-1000}"
        group_add:
            - dialout
        volumes:
            - ./docker/zigbee2mqtt/config/configuration.yaml:/app/data/configuration.yaml
            - ./docker/zigbee2mqtt/config/secret.yaml:/app/data/secret.yaml
            - zigbee2mqtt_datas:/app/data
            - /run/udev:/run/udev:ro
        # ports: # Enabled to activate front access + update config file frontend.enabled: true
        #     - "127.0.0.1:8081:8080"
        devices:
            - /dev/serial/by-id/usb-Texas_Instruments_TI_CC2531_USB_CDC___0X00124B001CDD463E-if00:/dev/ttyACM0
        depends_on:
            - mqtt_broker

volumes:
    database_datas: {}
    mqtt_broker_datas: {}
    mqtt_broker_logs: {}
    caddy_datas: {}
    zigbee2mqtt_datas: {}
